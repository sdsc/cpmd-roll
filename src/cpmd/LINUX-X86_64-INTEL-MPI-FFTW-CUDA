#INFO#
#INFO# Configuration to build a parallel cpmd executable for x86_64 using 
#INFO# the INTEL Fortran compiler version 12 or later.
#INFO# WARNING: Intel Fortran Compilers up to version 13.1.0.146
#INFO#          are affected by a bug compilation in the Jacobi
#INFO#          rotation (GMAX -> Infinity) if optimization levels
#INFO#          higher than -O1 are used.
#INFO#          Avoid also Fortran 2003/2008 and MPI30 options and OMP 4.5.
#INFO#
#INFO# M. Boero, T. Ikeda - Hyogo/Strasbourg/Tokyo January 2018
#INFO#

     IRAT=2
     FC='mpif90'
     CC='icc'
     LD='mpif90'
     FFLAGS_GROMOS='$(FFLAGS) -fixed'
     FFLAGS_GROMOS_MODULES='$(FFLAGS)'
     CPP='/usr/bin/cpp -P -traditional'
     CPPFLAGS='-D__Linux -D__HAS_FFT_FFTW3 -D__PARALLEL -DLINUX_IFC -D__HASNT_OMP_45 \
      -D__HASNT_F03_EXECUTE_COMMAND_LINE -D__HASNT_F08_ISO_FORTRAN_ENV -D_HASNT_MPI_30 \
      -D__HAS_CUDA'
     NOOPT_FLAG=' -O1 '
     NOOPT_OBJS=' jrotation_utils.mod.o '
     AR='/usr/bin/ar ruv'
     RANLIB='/usr/bin/ranlib'
     if [ $debug ]; then
       FFLAGS='-g -O0 -I$(MKLROOT)/include/fftw -gen_interfaces -traceback -check all,noarg_temp_created '
       CFLAGS='-g -O0 '
     else
       FFLAGS='-O2 -I$(MKLROOT)/include/fftw -axAVX'
       CFLAGS='-O2'
     fi
     if [ $omp ]; then
       FFLAGS=${FFLAGS}' -openmp '
       LIBS='-mkl=parallel -axAVX'
       OMP3_DISABLED=`{ ${FC} -v; } 2>&1 | ${AWK} '{ print ( $2 < "12.0.4" ) ? "true" : "false" }'`
     else
       LIBS='-mkl=sequential -axAVX'
     fi
     LFLAGS='-static-intel '${LIBS}
     CUDA_PATH=CUDAPATH
     CFLAGS=${CFLAGS}' -I'${CUDA_PATH}'/include'
     LIBS=${LIBS}' -L'${CUDA_PATH}'/lib64 -lcudart -lcufft -lcusolver -lcublas'
     NVCCFLAGS='--default-stream per-thread -O3 -m64 -gencode arch=compute_30,code=sm_30 -gencode arch=compute_35,code=sm_35 -gencode arch=compute_37,code=sm_37 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_52,code=sm_52 -gencode arch=compute_60,code=sm_60'
     LFLAGS='-static-intel '${LIBS}
